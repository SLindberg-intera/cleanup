.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Math::Polygon::Convex 3"
.TH Math::Polygon::Convex 3 "2011-09-19" "perl v5.22.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Math::Polygon::Convex \- Collection of convex algorithms
.SH "INHERITANCE"
.IX Header "INHERITANCE"
.Vb 2
\& Math::Polygon::Convex
\&   is a Exporter
.Ve
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& use Math::Polygon::Convex  qw/chainHull_2D/;
\&
\& my @points = ( [1,2], [2,4], [5,7], [1,2] );
\& my $poly   = chainHull_2D @points;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \*(L"convex polygon\*(R" around a set of points, is the polygon with a minimal
size which contains all points.
.PP
This package contains one convex calculation algorithm, but may be extended
with alternative implementations in the future.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.IP "\fBchainHull_2D\fR(\s-1POINTS\s0)" 4
.IX Item "chainHull_2D(POINTS)"
Each \s-1POINT\s0 is an \s-1ARRAY\s0 of two elements: the X and Y coordinate of a point.
Returned is the enclosing convex Math::Polygon object.
.Sp
Algorithm by Dan Sunday,
\&\fIhttp://geometryalgorithms.com/Archive/algorithm_0109/algorithm_0109.htm\fR
.SH "SEE ALSO"
.IX Header "SEE ALSO"
This module is part of Math-Polygon distribution version 1.02,
built on September 19, 2011. Website: \fIhttp://perl.overmeer.net/geo/\fR
.SH "LICENSE"
.IX Header "LICENSE"
Copyrights 2004,2006\-2011 by Mark Overmeer. For other contributors see ChangeLog.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See \fIhttp://www.perl.com/perl/misc/Artistic.html\fR
